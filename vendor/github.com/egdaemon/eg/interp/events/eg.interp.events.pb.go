// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: eg.interp.events.proto

package events

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Op_State int32

const (
	Op_Initiated Op_State = 0
	Op_Completed Op_State = 1
	Op_Error     Op_State = 1000
)

// Enum value maps for Op_State.
var (
	Op_State_name = map[int32]string{
		0:    "Initiated",
		1:    "Completed",
		1000: "Error",
	}
	Op_State_value = map[string]int32{
		"Initiated": 0,
		"Completed": 1,
		"Error":     1000,
	}
)

func (x Op_State) Enum() *Op_State {
	p := new(Op_State)
	*p = x
	return p
}

func (x Op_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Op_State) Descriptor() protoreflect.EnumDescriptor {
	return file_eg_interp_events_proto_enumTypes[0].Descriptor()
}

func (Op_State) Type() protoreflect.EnumType {
	return &file_eg_interp_events_proto_enumTypes[0]
}

func (x Op_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Op_State.Descriptor instead.
func (Op_State) EnumDescriptor() ([]byte, []int) {
	return file_eg_interp_events_proto_rawDescGZIP(), []int{3, 0}
}

type RunMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            []byte                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunMetadata) Reset() {
	*x = RunMetadata{}
	mi := &file_eg_interp_events_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunMetadata) ProtoMessage() {}

func (x *RunMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_eg_interp_events_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunMetadata.ProtoReflect.Descriptor instead.
func (*RunMetadata) Descriptor() ([]byte, []int) {
	return file_eg_interp_events_proto_rawDescGZIP(), []int{0}
}

func (x *RunMetadata) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

type LogHeader struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Major         int32                  `protobuf:"varint,1,opt,name=Major,proto3" json:"Major,omitempty"`
	Minor         int32                  `protobuf:"varint,2,opt,name=Minor,proto3" json:"Minor,omitempty"`
	Patch         int32                  `protobuf:"varint,3,opt,name=Patch,proto3" json:"Patch,omitempty"`
	Sts           int64                  `protobuf:"varint,4,opt,name=sts,proto3" json:"sts,omitempty"`
	Ets           int64                  `protobuf:"varint,5,opt,name=ets,proto3" json:"ets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogHeader) Reset() {
	*x = LogHeader{}
	mi := &file_eg_interp_events_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogHeader) ProtoMessage() {}

func (x *LogHeader) ProtoReflect() protoreflect.Message {
	mi := &file_eg_interp_events_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogHeader.ProtoReflect.Descriptor instead.
func (*LogHeader) Descriptor() ([]byte, []int) {
	return file_eg_interp_events_proto_rawDescGZIP(), []int{1}
}

func (x *LogHeader) GetMajor() int32 {
	if x != nil {
		return x.Major
	}
	return 0
}

func (x *LogHeader) GetMinor() int32 {
	if x != nil {
		return x.Minor
	}
	return 0
}

func (x *LogHeader) GetPatch() int32 {
	if x != nil {
		return x.Patch
	}
	return 0
}

func (x *LogHeader) GetSts() int64 {
	if x != nil {
		return x.Sts
	}
	return 0
}

func (x *LogHeader) GetEts() int64 {
	if x != nil {
		return x.Ets
	}
	return 0
}

// heartbeat event
type Heartbeat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Heartbeat) Reset() {
	*x = Heartbeat{}
	mi := &file_eg_interp_events_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Heartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Heartbeat) ProtoMessage() {}

func (x *Heartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_eg_interp_events_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Heartbeat.ProtoReflect.Descriptor instead.
func (*Heartbeat) Descriptor() ([]byte, []int) {
	return file_eg_interp_events_proto_rawDescGZIP(), []int{2}
}

type Op struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         Op_State               `protobuf:"varint,1,opt,name=state,proto3,enum=eg.interp.events.Op_State" json:"state,omitempty"`
	Milliseconds  int64                  `protobuf:"varint,2,opt,name=milliseconds,json=millisecond,proto3" json:"milliseconds,omitempty"` // duration milliseconds.
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Module        string                 `protobuf:"bytes,4,opt,name=module,proto3" json:"module,omitempty"`
	Op            string                 `protobuf:"bytes,5,opt,name=op,proto3" json:"op,omitempty"`
	Path          []string               `protobuf:"bytes,1000,rep,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Op) Reset() {
	*x = Op{}
	mi := &file_eg_interp_events_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Op) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Op) ProtoMessage() {}

func (x *Op) ProtoReflect() protoreflect.Message {
	mi := &file_eg_interp_events_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Op.ProtoReflect.Descriptor instead.
func (*Op) Descriptor() ([]byte, []int) {
	return file_eg_interp_events_proto_rawDescGZIP(), []int{3}
}

func (x *Op) GetState() Op_State {
	if x != nil {
		return x.State
	}
	return Op_Initiated
}

func (x *Op) GetMilliseconds() int64 {
	if x != nil {
		return x.Milliseconds
	}
	return 0
}

func (x *Op) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Op) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *Op) GetOp() string {
	if x != nil {
		return x.Op
	}
	return ""
}

func (x *Op) GetPath() []string {
	if x != nil {
		return x.Path
	}
	return nil
}

// metric event contains a json set of fields
type Metric struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FieldsJSON    []byte                 `protobuf:"bytes,1000,opt,name=fieldsJSON,proto3" json:"fieldsJSON,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Metric) Reset() {
	*x = Metric{}
	mi := &file_eg_interp_events_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Metric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metric) ProtoMessage() {}

func (x *Metric) ProtoReflect() protoreflect.Message {
	mi := &file_eg_interp_events_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metric.ProtoReflect.Descriptor instead.
func (*Metric) Descriptor() ([]byte, []int) {
	return file_eg_interp_events_proto_rawDescGZIP(), []int{4}
}

func (x *Metric) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Metric) GetFieldsJSON() []byte {
	if x != nil {
		return x.FieldsJSON
	}
	return nil
}

type Coverage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Statements    float32                `protobuf:"fixed32,2,opt,name=statements,proto3" json:"statements,omitempty"`
	Branches      float32                `protobuf:"fixed32,3,opt,name=branches,proto3" json:"branches,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Coverage) Reset() {
	*x = Coverage{}
	mi := &file_eg_interp_events_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Coverage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coverage) ProtoMessage() {}

func (x *Coverage) ProtoReflect() protoreflect.Message {
	mi := &file_eg_interp_events_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coverage.ProtoReflect.Descriptor instead.
func (*Coverage) Descriptor() ([]byte, []int) {
	return file_eg_interp_events_proto_rawDescGZIP(), []int{5}
}

func (x *Coverage) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Coverage) GetStatements() float32 {
	if x != nil {
		return x.Statements
	}
	return 0
}

func (x *Coverage) GetBranches() float32 {
	if x != nil {
		return x.Branches
	}
	return 0
}

// Represents every message recorded when executing a job
type Message struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`  // uuid v7
	Ts    int64                  `protobuf:"varint,2,opt,name=ts,proto3" json:"ts,omitempty"` // unix timestamp.
	// Types that are valid to be assigned to Event:
	//
	//	*Message_Preamble
	//	*Message_Heartbeat
	//	*Message_Op
	//	*Message_Metric
	//	*Message_Coverage
	Event         isMessage_Event `protobuf_oneof:"Event"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_eg_interp_events_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_eg_interp_events_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_eg_interp_events_proto_rawDescGZIP(), []int{6}
}

func (x *Message) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Message) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *Message) GetEvent() isMessage_Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *Message) GetPreamble() *LogHeader {
	if x != nil {
		if x, ok := x.Event.(*Message_Preamble); ok {
			return x.Preamble
		}
	}
	return nil
}

func (x *Message) GetHeartbeat() *Heartbeat {
	if x != nil {
		if x, ok := x.Event.(*Message_Heartbeat); ok {
			return x.Heartbeat
		}
	}
	return nil
}

func (x *Message) GetOp() *Op {
	if x != nil {
		if x, ok := x.Event.(*Message_Op); ok {
			return x.Op
		}
	}
	return nil
}

func (x *Message) GetMetric() *Metric {
	if x != nil {
		if x, ok := x.Event.(*Message_Metric); ok {
			return x.Metric
		}
	}
	return nil
}

func (x *Message) GetCoverage() *Coverage {
	if x != nil {
		if x, ok := x.Event.(*Message_Coverage); ok {
			return x.Coverage
		}
	}
	return nil
}

type isMessage_Event interface {
	isMessage_Event()
}

type Message_Preamble struct {
	Preamble *LogHeader `protobuf:"bytes,100,opt,name=preamble,proto3,oneof"`
}

type Message_Heartbeat struct {
	Heartbeat *Heartbeat `protobuf:"bytes,101,opt,name=heartbeat,proto3,oneof"`
}

type Message_Op struct {
	Op *Op `protobuf:"bytes,102,opt,name=op,proto3,oneof"`
}

type Message_Metric struct {
	Metric *Metric `protobuf:"bytes,103,opt,name=metric,proto3,oneof"`
}

type Message_Coverage struct {
	Coverage *Coverage `protobuf:"bytes,104,opt,name=coverage,proto3,oneof"`
}

func (*Message_Preamble) isMessage_Event() {}

func (*Message_Heartbeat) isMessage_Event() {}

func (*Message_Op) isMessage_Event() {}

func (*Message_Metric) isMessage_Event() {}

func (*Message_Coverage) isMessage_Event() {}

type RunUploadChunk struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Data     []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Checksum []byte                 `protobuf:"bytes,2,opt,name=checksum,proto3" json:"checksum,omitempty"`
	// Types that are valid to be assigned to InitialChunkMetadata:
	//
	//	*RunUploadChunk_None
	//	*RunUploadChunk_Metadata_
	InitialChunkMetadata isRunUploadChunk_InitialChunkMetadata `protobuf_oneof:"initialChunkMetadata"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *RunUploadChunk) Reset() {
	*x = RunUploadChunk{}
	mi := &file_eg_interp_events_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunUploadChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunUploadChunk) ProtoMessage() {}

func (x *RunUploadChunk) ProtoReflect() protoreflect.Message {
	mi := &file_eg_interp_events_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunUploadChunk.ProtoReflect.Descriptor instead.
func (*RunUploadChunk) Descriptor() ([]byte, []int) {
	return file_eg_interp_events_proto_rawDescGZIP(), []int{7}
}

func (x *RunUploadChunk) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *RunUploadChunk) GetChecksum() []byte {
	if x != nil {
		return x.Checksum
	}
	return nil
}

func (x *RunUploadChunk) GetInitialChunkMetadata() isRunUploadChunk_InitialChunkMetadata {
	if x != nil {
		return x.InitialChunkMetadata
	}
	return nil
}

func (x *RunUploadChunk) GetNone() bool {
	if x != nil {
		if x, ok := x.InitialChunkMetadata.(*RunUploadChunk_None); ok {
			return x.None
		}
	}
	return false
}

func (x *RunUploadChunk) GetMetadata() *RunUploadChunk_Metadata {
	if x != nil {
		if x, ok := x.InitialChunkMetadata.(*RunUploadChunk_Metadata_); ok {
			return x.Metadata
		}
	}
	return nil
}

type isRunUploadChunk_InitialChunkMetadata interface {
	isRunUploadChunk_InitialChunkMetadata()
}

type RunUploadChunk_None struct {
	None bool `protobuf:"varint,3,opt,name=none,proto3,oneof"`
}

type RunUploadChunk_Metadata_ struct {
	Metadata *RunUploadChunk_Metadata `protobuf:"bytes,4,opt,name=metadata,proto3,oneof"`
}

func (*RunUploadChunk_None) isRunUploadChunk_InitialChunkMetadata() {}

func (*RunUploadChunk_Metadata_) isRunUploadChunk_InitialChunkMetadata() {}

type RunUploadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Run           *RunMetadata           `protobuf:"bytes,1,opt,name=run,proto3" json:"run,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunUploadResponse) Reset() {
	*x = RunUploadResponse{}
	mi := &file_eg_interp_events_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunUploadResponse) ProtoMessage() {}

func (x *RunUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eg_interp_events_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunUploadResponse.ProtoReflect.Descriptor instead.
func (*RunUploadResponse) Descriptor() ([]byte, []int) {
	return file_eg_interp_events_proto_rawDescGZIP(), []int{8}
}

func (x *RunUploadResponse) GetRun() *RunMetadata {
	if x != nil {
		return x.Run
	}
	return nil
}

type RunLogRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Run           *RunMetadata           `protobuf:"bytes,1,opt,name=run,proto3" json:"run,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunLogRequest) Reset() {
	*x = RunLogRequest{}
	mi := &file_eg_interp_events_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunLogRequest) ProtoMessage() {}

func (x *RunLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eg_interp_events_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunLogRequest.ProtoReflect.Descriptor instead.
func (*RunLogRequest) Descriptor() ([]byte, []int) {
	return file_eg_interp_events_proto_rawDescGZIP(), []int{9}
}

func (x *RunLogRequest) GetRun() *RunMetadata {
	if x != nil {
		return x.Run
	}
	return nil
}

type RunLogResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       []byte                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunLogResponse) Reset() {
	*x = RunLogResponse{}
	mi := &file_eg_interp_events_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunLogResponse) ProtoMessage() {}

func (x *RunLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eg_interp_events_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunLogResponse.ProtoReflect.Descriptor instead.
func (*RunLogResponse) Descriptor() ([]byte, []int) {
	return file_eg_interp_events_proto_rawDescGZIP(), []int{10}
}

func (x *RunLogResponse) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type RunInitiateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunInitiateRequest) Reset() {
	*x = RunInitiateRequest{}
	mi := &file_eg_interp_events_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunInitiateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunInitiateRequest) ProtoMessage() {}

func (x *RunInitiateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eg_interp_events_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunInitiateRequest.ProtoReflect.Descriptor instead.
func (*RunInitiateRequest) Descriptor() ([]byte, []int) {
	return file_eg_interp_events_proto_rawDescGZIP(), []int{11}
}

type RunInitiateResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunInitiateResult) Reset() {
	*x = RunInitiateResult{}
	mi := &file_eg_interp_events_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunInitiateResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunInitiateResult) ProtoMessage() {}

func (x *RunInitiateResult) ProtoReflect() protoreflect.Message {
	mi := &file_eg_interp_events_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunInitiateResult.ProtoReflect.Descriptor instead.
func (*RunInitiateResult) Descriptor() ([]byte, []int) {
	return file_eg_interp_events_proto_rawDescGZIP(), []int{12}
}

type RunCancelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunCancelRequest) Reset() {
	*x = RunCancelRequest{}
	mi := &file_eg_interp_events_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunCancelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunCancelRequest) ProtoMessage() {}

func (x *RunCancelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eg_interp_events_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunCancelRequest.ProtoReflect.Descriptor instead.
func (*RunCancelRequest) Descriptor() ([]byte, []int) {
	return file_eg_interp_events_proto_rawDescGZIP(), []int{13}
}

type RunCancelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunCancelResponse) Reset() {
	*x = RunCancelResponse{}
	mi := &file_eg_interp_events_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunCancelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunCancelResponse) ProtoMessage() {}

func (x *RunCancelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eg_interp_events_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunCancelResponse.ProtoReflect.Descriptor instead.
func (*RunCancelResponse) Descriptor() ([]byte, []int) {
	return file_eg_interp_events_proto_rawDescGZIP(), []int{14}
}

type RunWatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Run           *RunMetadata           `protobuf:"bytes,1,opt,name=run,proto3" json:"run,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunWatchRequest) Reset() {
	*x = RunWatchRequest{}
	mi := &file_eg_interp_events_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunWatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunWatchRequest) ProtoMessage() {}

func (x *RunWatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eg_interp_events_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunWatchRequest.ProtoReflect.Descriptor instead.
func (*RunWatchRequest) Descriptor() ([]byte, []int) {
	return file_eg_interp_events_proto_rawDescGZIP(), []int{15}
}

func (x *RunWatchRequest) GetRun() *RunMetadata {
	if x != nil {
		return x.Run
	}
	return nil
}

type DispatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Messages      []*Message             `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DispatchRequest) Reset() {
	*x = DispatchRequest{}
	mi := &file_eg_interp_events_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DispatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DispatchRequest) ProtoMessage() {}

func (x *DispatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eg_interp_events_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DispatchRequest.ProtoReflect.Descriptor instead.
func (*DispatchRequest) Descriptor() ([]byte, []int) {
	return file_eg_interp_events_proto_rawDescGZIP(), []int{16}
}

func (x *DispatchRequest) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

type DispatchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DispatchResponse) Reset() {
	*x = DispatchResponse{}
	mi := &file_eg_interp_events_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DispatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DispatchResponse) ProtoMessage() {}

func (x *DispatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eg_interp_events_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DispatchResponse.ProtoReflect.Descriptor instead.
func (*DispatchResponse) Descriptor() ([]byte, []int) {
	return file_eg_interp_events_proto_rawDescGZIP(), []int{17}
}

type RunUploadChunk_Metadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bytes         uint64                 `protobuf:"varint,1,opt,name=bytes,proto3" json:"bytes,omitempty"`
	Checksum      []byte                 `protobuf:"bytes,2,opt,name=checksum,proto3" json:"checksum,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunUploadChunk_Metadata) Reset() {
	*x = RunUploadChunk_Metadata{}
	mi := &file_eg_interp_events_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunUploadChunk_Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunUploadChunk_Metadata) ProtoMessage() {}

func (x *RunUploadChunk_Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_eg_interp_events_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunUploadChunk_Metadata.ProtoReflect.Descriptor instead.
func (*RunUploadChunk_Metadata) Descriptor() ([]byte, []int) {
	return file_eg_interp_events_proto_rawDescGZIP(), []int{7, 0}
}

func (x *RunUploadChunk_Metadata) GetBytes() uint64 {
	if x != nil {
		return x.Bytes
	}
	return 0
}

func (x *RunUploadChunk_Metadata) GetChecksum() []byte {
	if x != nil {
		return x.Checksum
	}
	return nil
}

var File_eg_interp_events_proto protoreflect.FileDescriptor

const file_eg_interp_events_proto_rawDesc = "" +
	"\n" +
	"\x16eg.interp.events.proto\x12\x10eg.interp.events\"\x1d\n" +
	"\vRunMetadata\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\fR\x02id\"q\n" +
	"\tLogHeader\x12\x14\n" +
	"\x05Major\x18\x01 \x01(\x05R\x05Major\x12\x14\n" +
	"\x05Minor\x18\x02 \x01(\x05R\x05Minor\x12\x14\n" +
	"\x05Patch\x18\x03 \x01(\x05R\x05Patch\x12\x10\n" +
	"\x03sts\x18\x04 \x01(\x03R\x03sts\x12\x10\n" +
	"\x03ets\x18\x05 \x01(\x03R\x03ets\"\v\n" +
	"\tHeartbeat\"\xe4\x01\n" +
	"\x02Op\x120\n" +
	"\x05state\x18\x01 \x01(\x0e2\x1a.eg.interp.events.Op.StateR\x05state\x12!\n" +
	"\fmilliseconds\x18\x02 \x01(\x03R\vmillisecond\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x16\n" +
	"\x06module\x18\x04 \x01(\tR\x06module\x12\x0e\n" +
	"\x02op\x18\x05 \x01(\tR\x02op\x12\x13\n" +
	"\x04path\x18\xe8\a \x03(\tR\x04path\"1\n" +
	"\x05State\x12\r\n" +
	"\tInitiated\x10\x00\x12\r\n" +
	"\tCompleted\x10\x01\x12\n" +
	"\n" +
	"\x05Error\x10\xe8\aJ\x05\b\x06\x10\xe8\a\"D\n" +
	"\x06Metric\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1f\n" +
	"\n" +
	"fieldsJSON\x18\xe8\a \x01(\fR\n" +
	"fieldsJSONJ\x05\b\x02\x10\xe8\a\"Z\n" +
	"\bCoverage\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x1e\n" +
	"\n" +
	"statements\x18\x02 \x01(\x02R\n" +
	"statements\x12\x1a\n" +
	"\bbranches\x18\x03 \x01(\x02R\bbranches\"\xc0\x02\n" +
	"\aMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x0e\n" +
	"\x02ts\x18\x02 \x01(\x03R\x02ts\x129\n" +
	"\bpreamble\x18d \x01(\v2\x1b.eg.interp.events.LogHeaderH\x00R\bpreamble\x12;\n" +
	"\theartbeat\x18e \x01(\v2\x1b.eg.interp.events.HeartbeatH\x00R\theartbeat\x12&\n" +
	"\x02op\x18f \x01(\v2\x14.eg.interp.events.OpH\x00R\x02op\x122\n" +
	"\x06metric\x18g \x01(\v2\x18.eg.interp.events.MetricH\x00R\x06metric\x128\n" +
	"\bcoverage\x18h \x01(\v2\x1a.eg.interp.events.CoverageH\x00R\bcoverageB\a\n" +
	"\x05Event\"\xf5\x01\n" +
	"\x0eRunUploadChunk\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\x12\x1a\n" +
	"\bchecksum\x18\x02 \x01(\fR\bchecksum\x12\x14\n" +
	"\x04none\x18\x03 \x01(\bH\x00R\x04none\x12G\n" +
	"\bmetadata\x18\x04 \x01(\v2).eg.interp.events.RunUploadChunk.MetadataH\x00R\bmetadata\x1a<\n" +
	"\bMetadata\x12\x14\n" +
	"\x05bytes\x18\x01 \x01(\x04R\x05bytes\x12\x1a\n" +
	"\bchecksum\x18\x02 \x01(\fR\bchecksumB\x16\n" +
	"\x14initialChunkMetadata\"D\n" +
	"\x11RunUploadResponse\x12/\n" +
	"\x03run\x18\x01 \x01(\v2\x1d.eg.interp.events.RunMetadataR\x03run\"@\n" +
	"\rRunLogRequest\x12/\n" +
	"\x03run\x18\x01 \x01(\v2\x1d.eg.interp.events.RunMetadataR\x03run\"*\n" +
	"\x0eRunLogResponse\x12\x18\n" +
	"\acontent\x18\x01 \x01(\fR\acontent\"\x14\n" +
	"\x12RunInitiateRequest\"\x13\n" +
	"\x11RunInitiateResult\"\x12\n" +
	"\x10RunCancelRequest\"\x13\n" +
	"\x11RunCancelResponse\"B\n" +
	"\x0fRunWatchRequest\x12/\n" +
	"\x03run\x18\x01 \x01(\v2\x1d.eg.interp.events.RunMetadataR\x03run\"H\n" +
	"\x0fDispatchRequest\x125\n" +
	"\bmessages\x18\x01 \x03(\v2\x19.eg.interp.events.MessageR\bmessages\"\x12\n" +
	"\x10DispatchResponse2\xcb\x02\n" +
	"\x05Agent\x12S\n" +
	"\x06Upload\x12 .eg.interp.events.RunUploadChunk\x1a#.eg.interp.events.RunUploadResponse\"\x00(\x01\x12S\n" +
	"\x06Cancel\x12\".eg.interp.events.RunCancelRequest\x1a#.eg.interp.events.RunCancelResponse\"\x00\x12M\n" +
	"\x04Logs\x12\x1f.eg.interp.events.RunLogRequest\x1a .eg.interp.events.RunLogResponse\"\x000\x01\x12I\n" +
	"\x05Watch\x12!.eg.interp.events.RunWatchRequest\x1a\x19.eg.interp.events.Message\"\x000\x012]\n" +
	"\x06Events\x12S\n" +
	"\bDispatch\x12!.eg.interp.events.DispatchRequest\x1a\".eg.interp.events.DispatchResponse\"\x002]\n" +
	"\x06Runner\x12S\n" +
	"\bDispatch\x12!.eg.interp.events.DispatchRequest\x1a\".eg.interp.events.DispatchResponse\"\x00b\x06proto3"

var (
	file_eg_interp_events_proto_rawDescOnce sync.Once
	file_eg_interp_events_proto_rawDescData []byte
)

func file_eg_interp_events_proto_rawDescGZIP() []byte {
	file_eg_interp_events_proto_rawDescOnce.Do(func() {
		file_eg_interp_events_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_eg_interp_events_proto_rawDesc), len(file_eg_interp_events_proto_rawDesc)))
	})
	return file_eg_interp_events_proto_rawDescData
}

var file_eg_interp_events_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_eg_interp_events_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_eg_interp_events_proto_goTypes = []any{
	(Op_State)(0),                   // 0: eg.interp.events.Op.State
	(*RunMetadata)(nil),             // 1: eg.interp.events.RunMetadata
	(*LogHeader)(nil),               // 2: eg.interp.events.LogHeader
	(*Heartbeat)(nil),               // 3: eg.interp.events.Heartbeat
	(*Op)(nil),                      // 4: eg.interp.events.Op
	(*Metric)(nil),                  // 5: eg.interp.events.Metric
	(*Coverage)(nil),                // 6: eg.interp.events.Coverage
	(*Message)(nil),                 // 7: eg.interp.events.Message
	(*RunUploadChunk)(nil),          // 8: eg.interp.events.RunUploadChunk
	(*RunUploadResponse)(nil),       // 9: eg.interp.events.RunUploadResponse
	(*RunLogRequest)(nil),           // 10: eg.interp.events.RunLogRequest
	(*RunLogResponse)(nil),          // 11: eg.interp.events.RunLogResponse
	(*RunInitiateRequest)(nil),      // 12: eg.interp.events.RunInitiateRequest
	(*RunInitiateResult)(nil),       // 13: eg.interp.events.RunInitiateResult
	(*RunCancelRequest)(nil),        // 14: eg.interp.events.RunCancelRequest
	(*RunCancelResponse)(nil),       // 15: eg.interp.events.RunCancelResponse
	(*RunWatchRequest)(nil),         // 16: eg.interp.events.RunWatchRequest
	(*DispatchRequest)(nil),         // 17: eg.interp.events.DispatchRequest
	(*DispatchResponse)(nil),        // 18: eg.interp.events.DispatchResponse
	(*RunUploadChunk_Metadata)(nil), // 19: eg.interp.events.RunUploadChunk.Metadata
}
var file_eg_interp_events_proto_depIdxs = []int32{
	0,  // 0: eg.interp.events.Op.state:type_name -> eg.interp.events.Op.State
	2,  // 1: eg.interp.events.Message.preamble:type_name -> eg.interp.events.LogHeader
	3,  // 2: eg.interp.events.Message.heartbeat:type_name -> eg.interp.events.Heartbeat
	4,  // 3: eg.interp.events.Message.op:type_name -> eg.interp.events.Op
	5,  // 4: eg.interp.events.Message.metric:type_name -> eg.interp.events.Metric
	6,  // 5: eg.interp.events.Message.coverage:type_name -> eg.interp.events.Coverage
	19, // 6: eg.interp.events.RunUploadChunk.metadata:type_name -> eg.interp.events.RunUploadChunk.Metadata
	1,  // 7: eg.interp.events.RunUploadResponse.run:type_name -> eg.interp.events.RunMetadata
	1,  // 8: eg.interp.events.RunLogRequest.run:type_name -> eg.interp.events.RunMetadata
	1,  // 9: eg.interp.events.RunWatchRequest.run:type_name -> eg.interp.events.RunMetadata
	7,  // 10: eg.interp.events.DispatchRequest.messages:type_name -> eg.interp.events.Message
	8,  // 11: eg.interp.events.Agent.Upload:input_type -> eg.interp.events.RunUploadChunk
	14, // 12: eg.interp.events.Agent.Cancel:input_type -> eg.interp.events.RunCancelRequest
	10, // 13: eg.interp.events.Agent.Logs:input_type -> eg.interp.events.RunLogRequest
	16, // 14: eg.interp.events.Agent.Watch:input_type -> eg.interp.events.RunWatchRequest
	17, // 15: eg.interp.events.Events.Dispatch:input_type -> eg.interp.events.DispatchRequest
	17, // 16: eg.interp.events.Runner.Dispatch:input_type -> eg.interp.events.DispatchRequest
	9,  // 17: eg.interp.events.Agent.Upload:output_type -> eg.interp.events.RunUploadResponse
	15, // 18: eg.interp.events.Agent.Cancel:output_type -> eg.interp.events.RunCancelResponse
	11, // 19: eg.interp.events.Agent.Logs:output_type -> eg.interp.events.RunLogResponse
	7,  // 20: eg.interp.events.Agent.Watch:output_type -> eg.interp.events.Message
	18, // 21: eg.interp.events.Events.Dispatch:output_type -> eg.interp.events.DispatchResponse
	18, // 22: eg.interp.events.Runner.Dispatch:output_type -> eg.interp.events.DispatchResponse
	17, // [17:23] is the sub-list for method output_type
	11, // [11:17] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_eg_interp_events_proto_init() }
func file_eg_interp_events_proto_init() {
	if File_eg_interp_events_proto != nil {
		return
	}
	file_eg_interp_events_proto_msgTypes[6].OneofWrappers = []any{
		(*Message_Preamble)(nil),
		(*Message_Heartbeat)(nil),
		(*Message_Op)(nil),
		(*Message_Metric)(nil),
		(*Message_Coverage)(nil),
	}
	file_eg_interp_events_proto_msgTypes[7].OneofWrappers = []any{
		(*RunUploadChunk_None)(nil),
		(*RunUploadChunk_Metadata_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_eg_interp_events_proto_rawDesc), len(file_eg_interp_events_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_eg_interp_events_proto_goTypes,
		DependencyIndexes: file_eg_interp_events_proto_depIdxs,
		EnumInfos:         file_eg_interp_events_proto_enumTypes,
		MessageInfos:      file_eg_interp_events_proto_msgTypes,
	}.Build()
	File_eg_interp_events_proto = out.File
	file_eg_interp_events_proto_goTypes = nil
	file_eg_interp_events_proto_depIdxs = nil
}
