// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.29.2
// source: acme.proto

package acme

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Challenge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Digest string `protobuf:"bytes,2,opt,name=digest,proto3" json:"digest,omitempty"`
	Token  string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *Challenge) Reset() {
	*x = Challenge{}
	mi := &file_acme_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Challenge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Challenge) ProtoMessage() {}

func (x *Challenge) ProtoReflect() protoreflect.Message {
	mi := &file_acme_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Challenge.ProtoReflect.Descriptor instead.
func (*Challenge) Descriptor() ([]byte, []int) {
	return file_acme_proto_rawDescGZIP(), []int{0}
}

func (x *Challenge) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *Challenge) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

func (x *Challenge) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type CertificateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CSR []byte `protobuf:"bytes,1,opt,name=CSR,proto3" json:"CSR,omitempty"`
	// minimum duration that cached
	// certificates must be valid for in
	// order to be acceptable.
	CacheMinimumExpiration uint64 `protobuf:"varint,2,opt,name=cacheMinimumExpiration,proto3" json:"cacheMinimumExpiration,omitempty"`
}

func (x *CertificateRequest) Reset() {
	*x = CertificateRequest{}
	mi := &file_acme_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CertificateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertificateRequest) ProtoMessage() {}

func (x *CertificateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_acme_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CertificateRequest.ProtoReflect.Descriptor instead.
func (*CertificateRequest) Descriptor() ([]byte, []int) {
	return file_acme_proto_rawDescGZIP(), []int{1}
}

func (x *CertificateRequest) GetCSR() []byte {
	if x != nil {
		return x.CSR
	}
	return nil
}

func (x *CertificateRequest) GetCacheMinimumExpiration() uint64 {
	if x != nil {
		return x.CacheMinimumExpiration
	}
	return 0
}

type CertificateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Certificate []byte `protobuf:"bytes,1,opt,name=certificate,proto3" json:"certificate,omitempty"`
	Authority   []byte `protobuf:"bytes,2,opt,name=authority,proto3" json:"authority,omitempty"`
	Private     []byte `protobuf:"bytes,3,opt,name=private,proto3" json:"private,omitempty"`
}

func (x *CertificateResponse) Reset() {
	*x = CertificateResponse{}
	mi := &file_acme_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CertificateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertificateResponse) ProtoMessage() {}

func (x *CertificateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_acme_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CertificateResponse.ProtoReflect.Descriptor instead.
func (*CertificateResponse) Descriptor() ([]byte, []int) {
	return file_acme_proto_rawDescGZIP(), []int{2}
}

func (x *CertificateResponse) GetCertificate() []byte {
	if x != nil {
		return x.Certificate
	}
	return nil
}

func (x *CertificateResponse) GetAuthority() []byte {
	if x != nil {
		return x.Authority
	}
	return nil
}

func (x *CertificateResponse) GetPrivate() []byte {
	if x != nil {
		return x.Private
	}
	return nil
}

type ResolutionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResolutionRequest) Reset() {
	*x = ResolutionRequest{}
	mi := &file_acme_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResolutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolutionRequest) ProtoMessage() {}

func (x *ResolutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_acme_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolutionRequest.ProtoReflect.Descriptor instead.
func (*ResolutionRequest) Descriptor() ([]byte, []int) {
	return file_acme_proto_rawDescGZIP(), []int{3}
}

type ResolutionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Challenge *Challenge `protobuf:"bytes,1,opt,name=challenge,proto3" json:"challenge,omitempty"`
}

func (x *ResolutionResponse) Reset() {
	*x = ResolutionResponse{}
	mi := &file_acme_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResolutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolutionResponse) ProtoMessage() {}

func (x *ResolutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_acme_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolutionResponse.ProtoReflect.Descriptor instead.
func (*ResolutionResponse) Descriptor() ([]byte, []int) {
	return file_acme_proto_rawDescGZIP(), []int{4}
}

func (x *ResolutionResponse) GetChallenge() *Challenge {
	if x != nil {
		return x.Challenge
	}
	return nil
}

var File_acme_proto protoreflect.FileDescriptor

var file_acme_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x61, 0x63, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x61, 0x63,
	0x6d, 0x65, 0x22, 0x51, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x5e, 0x0a, 0x12, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x43,
	0x53, 0x52, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x43, 0x53, 0x52, 0x12, 0x36, 0x0a,
	0x16, 0x63, 0x61, 0x63, 0x68, 0x65, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x45, 0x78, 0x70,
	0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x16, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x45, 0x78, 0x70, 0x69, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6f, 0x0a, 0x13, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x43, 0x0a, 0x12, 0x52,
	0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2d, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x63, 0x6d, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6c,
	0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65,
	0x32, 0xce, 0x01, 0x0a, 0x04, 0x41, 0x43, 0x4d, 0x45, 0x12, 0x42, 0x0a, 0x09, 0x43, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x18, 0x2e, 0x61, 0x63, 0x6d, 0x65, 0x2e, 0x43, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x19, 0x2e, 0x61, 0x63, 0x6d, 0x65, 0x2e, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a,
	0x06, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x12, 0x18, 0x2e, 0x61, 0x63, 0x6d, 0x65, 0x2e, 0x43,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x61, 0x63, 0x6d, 0x65, 0x2e, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41,
	0x0a, 0x0a, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x2e, 0x61,
	0x63, 0x6d, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x63, 0x6d, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6a, 0x61, 0x6d, 0x65, 0x73, 0x2d, 0x6c, 0x61, 0x77, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2f, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2f, 0x61, 0x63, 0x6d, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_acme_proto_rawDescOnce sync.Once
	file_acme_proto_rawDescData = file_acme_proto_rawDesc
)

func file_acme_proto_rawDescGZIP() []byte {
	file_acme_proto_rawDescOnce.Do(func() {
		file_acme_proto_rawDescData = protoimpl.X.CompressGZIP(file_acme_proto_rawDescData)
	})
	return file_acme_proto_rawDescData
}

var file_acme_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_acme_proto_goTypes = []any{
	(*Challenge)(nil),           // 0: acme.Challenge
	(*CertificateRequest)(nil),  // 1: acme.CertificateRequest
	(*CertificateResponse)(nil), // 2: acme.CertificateResponse
	(*ResolutionRequest)(nil),   // 3: acme.ResolutionRequest
	(*ResolutionResponse)(nil),  // 4: acme.ResolutionResponse
}
var file_acme_proto_depIdxs = []int32{
	0, // 0: acme.ResolutionResponse.challenge:type_name -> acme.Challenge
	1, // 1: acme.ACME.Challenge:input_type -> acme.CertificateRequest
	1, // 2: acme.ACME.Cached:input_type -> acme.CertificateRequest
	3, // 3: acme.ACME.Resolution:input_type -> acme.ResolutionRequest
	2, // 4: acme.ACME.Challenge:output_type -> acme.CertificateResponse
	2, // 5: acme.ACME.Cached:output_type -> acme.CertificateResponse
	4, // 6: acme.ACME.Resolution:output_type -> acme.ResolutionResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_acme_proto_init() }
func file_acme_proto_init() {
	if File_acme_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_acme_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_acme_proto_goTypes,
		DependencyIndexes: file_acme_proto_depIdxs,
		MessageInfos:      file_acme_proto_msgTypes,
	}.Build()
	File_acme_proto = out.File
	file_acme_proto_rawDesc = nil
	file_acme_proto_goTypes = nil
	file_acme_proto_depIdxs = nil
}
